name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - master
    tags:
      # normal versions
      - "v[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v[0-9]+.[0-9]+.[0-9]+-**"
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Enable Corepack
        shell: bash
        run: corepack enable

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Compile TypeScript code
        run: yarn build

      - name: Run linters
        run: yarn lint


  # Runs unit tests on all supported node versions and OSes
  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18, 20, 22, 24]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Enable Corepack
        shell: bash
        run: corepack enable

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Compile TypeScript code
        run: yarn build

      - name: Run unit tests
        run: yarn test:ci


  # Deploys the final package to NPM
  deploy:
    needs: [lint, unit-tests]

    # Trigger this step only when a commit on any branch is tagged with a version number
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Enable Corepack
        shell: bash
        run: corepack enable

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Extract the version and commit body from the tag
        id: extract_release
        # The body may be multiline, therefore newlines and % need to be escaped
        run: |
          VERSION="${{ github.ref }}"
          VERSION=${VERSION##*/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          EOF=$(od -An -N6 -x /dev/urandom | tr -d ' ')
          BODY=$(git show -s --format=%b)
          echo "BODY<<$EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          if [[ $VERSION == *"-"* ]] ; then
            echo "TAG=--tag next" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Create a clean build
        run: yarn build

      - run: git diff

      - name: Publish package to npm
        run: |
          yarn config set npmAuthToken "${{ secrets.NPM_TOKEN }}"
          yarn npm whoami
          yarn workspaces foreach --all -vti --no-private npm publish --tolerate-republish $TAG


      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.extract_release.outputs.VERSION }}
          draft: false
          # Prerelease versions create prereleases on Github
          prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
          body: ${{ steps.extract_release.outputs.BODY }}
